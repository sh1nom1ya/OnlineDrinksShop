@model drunkShop.Models.ViewModels.ProductUserVM
<link rel="stylesheet" href="~/css/summary.css" asp-append-version="true" />
<form asp-action="ProcessOrder" method="post">
    <div class="wrapper">
        <div class="itemss">
            @*Чек*@
            <div class="receipt">
                <h2>Ваш заказ</h2>
                @{
                    int index = 0;
                }
                @foreach (var product in Model.ProductList)
                {
                    var cartItem = Model.ShoppingCart.FirstOrDefault(c => c.ProductId == product.Id);
                    var quantity = cartItem?.Quantity ?? 0;

                    <div class="item" id="item-@index">
                        <span class="sp" >@product.Naming</span>
                        <span class="sp" id="quantity-@index"><p>x</p>@quantity</span>
                        <span class="sp" id="price-@index">@product.Price<p class="valute">р.</p></span>
                        <span id="totalpriceone-@index" class="totalpriceone sp"><p class="valute">р.</p></span>
                    </div>
                    index++;
                }
                <hr>
                <div class="receipt-total">
                    <span class="sp">Итоговая сумма:</span>
                    <span id="totalprice" class="totalprice sp"><p class="valute">р.</p> 0</span>
                </div>
            </div>

            @*Оплата*@
        <div class="payment-form">
            <div>
                <label for="name">Имя владельца карты</label>
                <input required
                       type="text"
                       class="payInp"
                       id="name"
                       name="name"
                       autocomplete="cc-name"
                       placeholder="Иванов Иван"
                       pattern="[a-zA-Zа-яА-ЯёЁ]+\s[a-zA-Zа-яА-ЯёЁ]+"
                       title="Введите имя и фамилию через пробел (только буквы).">
            </div>
            <div class="error-container"></div>

            <div class="card-number">
                <label>Номер карты</label>
                <input required
                       type="text"
                       class="payInp"
                       id="card-number"
                       name="card-number"
                       inputmode="numeric"
                       maxlength="19"
                       autocomplete="cc-number"
                       placeholder="1234 5678 9012 3456"
                       pattern="\d{4} \d{4} \d{4} \d{4}"
                       title="Введите номер карты в формате: 1234 5678 9012 3456.">
            </div>
            <div class="date-code">
                <div>
                    <label for="expiry-date">Срок действия</label>
                    <input required
                           type="text"
                           id="expiry-date"
                           name="expiry-date"
                           class="expiry-date payInp"
                           autocomplete="cc-exp"
                           placeholder="MM/YY"
                           maxlength="5"
                           pattern="(0[1-9]|1[0-2])/\d{2}"
                           title="Введите срок действия в формате MM/YY (месяц от 01 до 12).">
                </div>
                <div>
                    <label for="security-code">CVC-код</label>
                    <input required
                           type="text"
                           class="payInp"
                           id="security-code"
                           name="security-code"
                           inputmode="numeric"
                           minlength="3"
                           maxlength="3"
                           pattern="\d{3}"
                           placeholder="123"
                           title="Введите CVC код из 3 цифр.">
                </div>
            </div>
            <button type="submit" class="paybtn">Оплатить</button>
        </div>
        </div>
    </div>
</form>




@section Scripts{
    <partial name="_ValidationScriptsPartial" />

    <script>function updatePrices() {
            let totalPrice = 0;
            let index = 0;

            while (document.getElementById(`item-${index}`)) {
                const quantityElement = document.getElementById(`quantity-${index}`);
                const priceElement = document.getElementById(`price-${index}`);
                const totalPriceOneElement = document.getElementById(`totalpriceone-${index}`);

                const quantityText = quantityElement.textContent.match(/\d+/);
                const priceText = priceElement.textContent.replace('р.', '').trim();

                const quantity = parseInt(quantityText, 10) || 0;
                const price = parseFloat(priceText) || 0;

                const totalPriceOne = quantity * price;

                totalPriceOneElement.textContent = `${totalPriceOne.toFixed(2)} р.`;

                totalPrice += totalPriceOne;

                index++;
            }

            const totalPriceElement = document.getElementById('totalprice');
            totalPriceElement.innerHTML = `${totalPrice.toFixed(2)}<p class="valute">р.</p>`;
        }

        document.addEventListener('DOMContentLoaded', updatePrices);


        //Проверка на ввод

        document.addEventListener("DOMContentLoaded", function () {
            const nameInput = document.getElementById("name");
            const cardNumberInput = document.getElementById("card-number");
            const expiryDateInput = document.getElementById("expiry-date");
            const cvcInput = document.getElementById("security-code");

            // Функция для отображения ошибки
            function showError(input, message) {
                let error = input.nextElementSibling;
                if (!error || !error.classList.contains("error-message")) {
                    error = document.createElement("div");
                    error.classList.add("error-message");
                    input.parentNode.appendChild(error);
                }
                error.textContent = message;
            }

            // Функция для скрытия ошибки
            function hideError(input) {
                const error = input.nextElementSibling;
                if (error && error.classList.contains("error-message")) {
                    error.remove();
                }
            }

            // Проверка имени
            nameInput.addEventListener("input", function () {
                this.value = this.value.replace(/[^a-zA-Zа-яА-ЯёЁ\s]/g, "");
                hideError(this); // Убираем ошибку при исправлении
            });

            nameInput.addEventListener("blur", function () {
                if (!/^[a-zA-Zа-яА-ЯёЁ]+\s[a-zA-Zа-яА-ЯёЁ]+$/.test(this.value)) {
                    showError(this, "Введите имя и фамилию через пробел (только буквы).");
                } else {
                    hideError(this);
                }
            });

            // Проверка номера карты
            cardNumberInput.addEventListener("input", function () {
                this.value = this.value.replace(/\D/g, "").match(/.{1,4}/g)?.join(" ") || "";
                hideError(this);
            });

            cardNumberInput.addEventListener("blur", function () {
                if (!/^\d{4} \d{4} \d{4} \d{4}$/.test(this.value)) {
                    showError(this, "Введите номер карты в формате: 1234 5678 9012 3456.");
                } else {
                    hideError(this);
                }
            });

            // Проверка срока действия
            expiryDateInput.addEventListener("input", function () {
                let value = this.value.replace(/\D/g, "");
                let month = value.slice(0, 2);
                let year = value.slice(2, 4);

                if (month.length === 2) {
                    const monthInt = parseInt(month, 10);
                    if (monthInt < 1 || monthInt > 12) {
                        month = "12";
                    }
                }

                if (value.length > 2) {
                    this.value = month + "/" + year;
                } else {
                    this.value = month;
                }
                hideError(this);
            });

            expiryDateInput.addEventListener("blur", function () {
                if (!/^(0[1-9]|1[0-2])\/\d{2}$/.test(this.value)) {
                    showError(this, "Введите срок действия в формате MM/YY (месяц от 01 до 12).");
                } else {
                    hideError(this);
                }
            });

            // Проверка CVC
            cvcInput.addEventListener("input", function () {
                this.value = this.value.replace(/\D/g, "");
                hideError(this);
            });

            cvcInput.addEventListener("blur", function () {
                if (!/^\d{3}$/.test(this.value)) {
                    showError(this, "Введите CVC код из 3 цифр.");
                } else {
                    hideError(this);
                }
            });
        });


    </script>
}



<!--<form asp-action="ProcessOrder" method="post">
    <div class="wrapper-ch">
    <div class="items">-->
<!-- Чек -->
<!--<div class="receipt">
    <h2>Ваш заказ</h2>
    foreach (var product in Model.ProductList)
    {
        var cartItem = Model.ShoppingCart.FirstOrDefault(c => c.ProductId == product.Id);
        var quantity = cartItem?.Quantity ?? 0;

        <div class="item">
            <span>product.Naming</span>
            <span>x@quantity</span>
            <span>product.Price<p class="valute">р.</p></span>
            <span class="totalpriceone"><p class="valute">р.</p></span>
        </div>
    }
    <hr>
    <div class="receipt-total">
        <span>Итоговая сумма:</span>
        <span class="totalprice"><p class="valute">р.</p> </span>
    </div>
</div>-->
<!-- Форма оплаты -->
<!--<form class="payment-form">
            <div>
                <label for="name">Имя владельца карты</label>
                <input required type="text" id="name" name="name" autocomplete="cc-name" placeholder="Иванов Иван" pattern="[a-Z]+">
            </div>
            <div class="card-number">
                <label>Номер карты</label>
                <input required type="text" id="card-number" name="card-number" inputmode="numeric" minlength="16" maxlength="16" autocomplete="cc-number" pattern="[0-9]+" placeholder="1234567890123456">
            </div>
            <div class="date-code">
                <div>
                    <label for="expiry-date">Срок действия</label>
                    <input required type="text" id="expiry-date" name="expiry-date" class="expiry-date" autocomplete="cc-exp" placeholder="MM/YY" minlength="4" maxlength="4" pattern="[0-9/]+">
                </div>
                <div>
                    <label for="security-code">CVC-код</label>
                    <input required type="text" id="security-code" name="security-code" inputmode="numeric" minlength="3" maxlength="3" pattern="[0-9]+" placeholder="989">
                </div>
            </div>
            <button type="submit" class="form-control">Оплатить</button>
        </form>
    </div>
    </div>
</form>-->
